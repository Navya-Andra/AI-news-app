{"ast":null,"code":"var _jsxFileName = \"/home/navya/Documents/project_news_alan_ai/src/components/Modal/Modal.js\";\nimport React from 'react';\nimport { Typography, Divider, Chip, TextField, Button } from '@material-ui/core';\nimport SimpleModal from '@material-ui/core/Modal';\nimport emailjs from 'emailjs-com';\nimport useStyles from './styles';\n\nconst Modal = ({\n  isOpen,\n  setIsOpen,\n  showFeedback\n}) => {\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('gmail', 'alan_ai', e.target, 'user_dhVImkgxaL27bxQ8pLPQ5').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n\n  if (isOpen && showFeedback) {\n    body = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Something went wrong? Send us some feedback\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: sendEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"name\",\n      label: \"Your name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Your email\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"feedback\",\n      multiline: true,\n      rows: 5,\n      helperText: \"Describe the problems that you've encontered.\",\n      label: \"Feedback\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Send\")));\n  } else {\n    body = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.infoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"News by Categories\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, ['Business', 'Entertainment', 'General', 'Health', 'Science', 'Sports', 'Technology'].map(category => /*#__PURE__*/React.createElement(Chip, {\n      label: category,\n      color: \"primary\",\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 155\n      }\n    })))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.trySaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Try saying: \\\"Give me the latest \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 104\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 112\n      }\n    }, \"Business\")), \" news\\\"\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.infoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"News by Terms\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, ['Donald Trump', 'Bitcoin', 'PlayStation 5', 'Smartphones'].map(term => /*#__PURE__*/React.createElement(Chip, {\n      label: term,\n      color: \"primary\",\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 125\n      }\n    })), /*#__PURE__*/React.createElement(Chip, {\n      label: \"...and more\",\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 189\n      }\n    }))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.trySaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Try saying: \\\"What's up with \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 105\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 113\n      }\n    }, \"PlayStation 5\")), \"\\\"\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.infoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"News by Sources\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.chipContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, ['CNN', 'Wired', 'BBC News', 'Time', 'IGN', 'Buzzfeed', 'ABC News'].map(source => /*#__PURE__*/React.createElement(Chip, {\n      label: source,\n      color: \"primary\",\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 135\n      }\n    })), /*#__PURE__*/React.createElement(Chip, {\n      label: \"...and more\",\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 201\n      }\n    }))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      className: classes.trySaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Try saying: \\\"Give me the news from \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 107\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 115\n      }\n    }, \"CNN\")), \"\\\"\"));\n  }\n\n  return /*#__PURE__*/React.createElement(SimpleModal, {\n    open: isOpen,\n    onClose: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, body);\n};\n\nexport default Modal;","map":{"version":3,"sources":["/home/navya/Documents/project_news_alan_ai/src/components/Modal/Modal.js"],"names":["React","Typography","Divider","Chip","TextField","Button","SimpleModal","emailjs","useStyles","Modal","isOpen","setIsOpen","showFeedback","classes","body","sendEmail","e","preventDefault","sendForm","target","then","result","console","log","text","error","paper","form","infoContainer","chipContainer","map","category","chip","trySaying","term","source"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography, Divider, Chip, TextField, Button } from '@material-ui/core';\nimport SimpleModal from '@material-ui/core/Modal';\nimport emailjs from 'emailjs-com';\n\nimport useStyles from './styles';\n\nconst Modal = ({ isOpen, setIsOpen, showFeedback }) => {\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'alan_ai', e.target, 'user_dhVImkgxaL27bxQ8pLPQ5')\n      .then((result) => { console.log(result.text); }, (error) => { console.log(error.text); });\n  };\n\n  if (isOpen && showFeedback) {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Something went wrong? Send us some feedback</Typography>\n        <br />\n        <form className={classes.form} onSubmit={sendEmail}>\n          <TextField name=\"name\" label=\"Your name\" variant=\"outlined\" />\n          <br />\n          <TextField name=\"email\" type=\"email\" label=\"Your email\" variant=\"outlined\" />\n          <br />\n          <TextField name=\"feedback\" multiline rows={5} helperText=\"Describe the problems that you've encontered.\" label=\"Feedback\" variant=\"outlined\" />\n          <br />\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Send</Button>\n        </form>\n      </div>\n    );\n  } else {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Instructions</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Categories</Typography>\n          <div className={classes.chipContainer}>{['Business', 'Entertainment', 'General', 'Health', 'Science', 'Sports', 'Technology'].map((category) => <Chip label={category} color=\"primary\" className={classes.chip} />)}</div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;Give me the latest <strong><em>Business</em></strong> news&quot;</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Terms</Typography>\n          <div className={classes.chipContainer}>{['Donald Trump', 'Bitcoin', 'PlayStation 5', 'Smartphones'].map((term) => <Chip label={term} color=\"primary\" className={classes.chip} />)}<Chip label=\"...and more\" className={classes.chip} /></div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;What&apos;s up with <strong><em>PlayStation 5</em></strong>&quot;</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Sources</Typography>\n          <div className={classes.chipContainer}>{['CNN', 'Wired', 'BBC News', 'Time', 'IGN', 'Buzzfeed', 'ABC News'].map((source) => <Chip label={source} color=\"primary\" className={classes.chip} />)}<Chip label=\"...and more\" className={classes.chip} /></div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>Try saying: &quot;Give me the news from <strong><em>CNN</em></strong>&quot;</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <SimpleModal open={isOpen} onClose={() => setIsOpen(false)}>\n      {body}\n    </SimpleModal>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}