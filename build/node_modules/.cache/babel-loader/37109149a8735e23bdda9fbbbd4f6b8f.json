{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _constants = require('./constants');\n\nvar _fuzzy = require('./fuzzy');\n\nvar _fuzzy2 = _interopRequireDefault(_fuzzy);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable no-extra-parens */\n\n\nvar SKIP = 0;\nvar ADD = 1;\nvar START_NEW_REGION = 2;\nvar NOPE = 3;\n\nvar canAddTokenToEndOfSubRegion = function canAddTokenToEndOfSubRegion(subRegion, currentToken, _ref) {\n  var impliedHundreds = _ref.impliedHundreds;\n  var tokens = subRegion.tokens;\n  var prevToken = tokens[0];\n  if (!prevToken) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  if (impliedHundreds && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (impliedHundreds && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.MAGNITUDE) return true;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  if (impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  return false;\n};\n\nvar getSubRegionType = function getSubRegionType(subRegion, currentToken) {\n  if (!subRegion) {\n    return {\n      type: currentToken.type\n    };\n  }\n\n  var prevToken = subRegion.tokens[0];\n  var isHundred = prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT || prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN || prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN && _constants.NUMBER[prevToken.lowerCaseValue] > 9 || prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.UNIT || prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE;\n  if (subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE) return {\n    type: _constants.TOKEN_TYPE.MAGNITUDE,\n    isHundred: isHundred\n  };\n  if (isHundred) return {\n    type: _constants.TOKEN_TYPE.HUNDRED,\n    isHundred: isHundred\n  };\n  return {\n    type: currentToken.type,\n    isHundred: isHundred\n  };\n};\n\nvar checkIfTokenFitsSubRegion = function checkIfTokenFitsSubRegion(subRegion, token, options) {\n  var _getSubRegionType = getSubRegionType(subRegion, token);\n\n  var type = _getSubRegionType.type;\n  var isHundred = _getSubRegionType.isHundred;\n  if (!subRegion) return {\n    action: START_NEW_REGION,\n    type: type,\n    isHundred: isHundred\n  };\n\n  if (canAddTokenToEndOfSubRegion(subRegion, token, options)) {\n    return {\n      action: ADD,\n      type: type,\n      isHundred: isHundred\n    };\n  }\n\n  return {\n    action: START_NEW_REGION,\n    type: type,\n    isHundred: isHundred\n  };\n};\n\nvar getSubRegions = function getSubRegions(region, options) {\n  var subRegions = [];\n  var currentSubRegion = void 0;\n  var tokensCount = region.tokens.length;\n  var i = tokensCount - 1;\n\n  while (i >= 0) {\n    var token = region.tokens[i];\n\n    var _checkIfTokenFitsSubR = checkIfTokenFitsSubRegion(currentSubRegion, token, options);\n\n    var action = _checkIfTokenFitsSubR.action;\n    var type = _checkIfTokenFitsSubR.type;\n    var isHundred = _checkIfTokenFitsSubR.isHundred;\n    token.type = isHundred ? _constants.TOKEN_TYPE.HUNDRED : token.type;\n\n    switch (action) {\n      case ADD:\n        {\n          currentSubRegion.type = type;\n          currentSubRegion.tokens.unshift(token);\n          break;\n        }\n\n      case START_NEW_REGION:\n        {\n          currentSubRegion = {\n            tokens: [token],\n            type: type\n          };\n          subRegions.unshift(currentSubRegion);\n          break;\n        }\n      // no default\n    }\n\n    i--;\n  }\n\n  return subRegions;\n};\n\nvar canAddTokenToEndOfRegion = function canAddTokenToEndOfRegion(region, currentToken, _ref2) {\n  var impliedHundreds = _ref2.impliedHundreds;\n  var tokens = region.tokens;\n  var prevToken = tokens[tokens.length - 1];\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.UNIT && !region.hasDecimal) return false;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  return true;\n};\n\nvar checkIfTokenFitsRegion = function checkIfTokenFitsRegion(region, token, options) {\n  var isDecimal = _constants.DECIMALS.includes(token.lowerCaseValue);\n\n  if ((!region || !region.tokens.length) && isDecimal) {\n    return START_NEW_REGION;\n  }\n\n  var isPunctuation = _constants.PUNCTUATION.includes(token.lowerCaseValue);\n\n  if (isPunctuation) return SKIP;\n\n  var isJoiner = _constants.JOINERS.includes(token.lowerCaseValue);\n\n  if (isJoiner) return SKIP;\n\n  if (isDecimal && !region.hasDecimal) {\n    return ADD;\n  }\n\n  var isNumberWord = _constants.NUMBER_WORDS.includes(token.lowerCaseValue);\n\n  if (isNumberWord) {\n    if (!region) return START_NEW_REGION;\n\n    if (canAddTokenToEndOfRegion(region, token, options)) {\n      return ADD;\n    }\n\n    return START_NEW_REGION;\n  }\n\n  return NOPE;\n};\n\nvar checkBlacklist = function checkBlacklist(tokens) {\n  return tokens.length === 1 && _constants.BLACKLIST_SINGULAR_WORDS.includes(tokens[0].lowerCaseValue);\n};\n\nvar matchRegions = function matchRegions(tokens, options) {\n  var regions = [];\n  if (checkBlacklist(tokens)) return regions;\n  var i = 0;\n  var currentRegion = void 0;\n  var tokensCount = tokens.length;\n\n  while (i < tokensCount) {\n    var token = tokens[i];\n    var tokenFits = checkIfTokenFitsRegion(currentRegion, token, options);\n\n    switch (tokenFits) {\n      case SKIP:\n        {\n          break;\n        }\n\n      case ADD:\n        {\n          if (currentRegion) {\n            currentRegion.end = token.end;\n            currentRegion.tokens.push(token);\n\n            if (token.type === _constants.TOKEN_TYPE.DECIMAL) {\n              currentRegion.hasDecimal = true;\n            }\n          }\n\n          break;\n        }\n\n      case START_NEW_REGION:\n        {\n          currentRegion = {\n            start: token.start,\n            end: token.end,\n            tokens: [token]\n          };\n          regions.push(currentRegion);\n\n          if (token.type === _constants.TOKEN_TYPE.DECIMAL) {\n            currentRegion.hasDecimal = true;\n          }\n\n          break;\n        }\n\n      case NOPE:\n      default:\n        {\n          currentRegion = null;\n          break;\n        }\n    }\n\n    i++;\n  }\n\n  return regions.map(function (region) {\n    return (0, _extends3.default)({}, region, {\n      subRegions: getSubRegions(region, options)\n    });\n  });\n};\n\nvar getTokenType = function getTokenType(chunk) {\n  if (_constants.UNIT_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.UNIT;\n  if (_constants.TEN_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.TEN;\n  if (_constants.MAGNITUDE_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.MAGNITUDE;\n  if (_constants.DECIMALS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.DECIMAL;\n};\n\nexports.default = function (text, options) {\n  var tokens = text.split(/(\\w+|\\s|[[:punct:]])/i).reduce(function (acc, chunk) {\n    var unfuzzyChunk = chunk.length && options.fuzzy && !_constants.PUNCTUATION.includes(chunk) ? (0, _fuzzy2.default)(chunk) : chunk;\n    var start = acc.length ? acc[acc.length - 1].end + 1 : 0;\n    var end = start + chunk.length;\n    return end !== start ? acc.concat({\n      start: start,\n      end: end - 1,\n      value: unfuzzyChunk,\n      lowerCaseValue: unfuzzyChunk.toLowerCase(),\n      type: getTokenType(unfuzzyChunk, options)\n    }) : acc;\n  }, []);\n  var regions = matchRegions(tokens, options);\n  return regions;\n};","map":{"version":3,"sources":["/home/navya/Documents/project_news_alan_ai/node_modules/words-to-numbers/dist/parser.js"],"names":["Object","defineProperty","exports","value","_extends2","require","_extends3","_interopRequireDefault","_constants","_fuzzy","_fuzzy2","obj","__esModule","default","SKIP","ADD","START_NEW_REGION","NOPE","canAddTokenToEndOfSubRegion","subRegion","currentToken","_ref","impliedHundreds","tokens","prevToken","type","TOKEN_TYPE","MAGNITUDE","UNIT","TEN","getSubRegionType","isHundred","NUMBER","lowerCaseValue","HUNDRED","checkIfTokenFitsSubRegion","token","options","_getSubRegionType","action","getSubRegions","region","subRegions","currentSubRegion","tokensCount","length","i","_checkIfTokenFitsSubR","unshift","canAddTokenToEndOfRegion","_ref2","hasDecimal","checkIfTokenFitsRegion","isDecimal","DECIMALS","includes","isPunctuation","PUNCTUATION","isJoiner","JOINERS","isNumberWord","NUMBER_WORDS","checkBlacklist","BLACKLIST_SINGULAR_WORDS","matchRegions","regions","currentRegion","tokenFits","end","push","DECIMAL","start","map","getTokenType","chunk","UNIT_KEYS","toLowerCase","TEN_KEYS","MAGNITUDE_KEYS","text","split","reduce","acc","unfuzzyChunk","fuzzy","concat"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _constants = require('./constants');\n\nvar _fuzzy = require('./fuzzy');\n\nvar _fuzzy2 = _interopRequireDefault(_fuzzy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-extra-parens */\nvar SKIP = 0;\nvar ADD = 1;\nvar START_NEW_REGION = 2;\nvar NOPE = 3;\n\nvar canAddTokenToEndOfSubRegion = function canAddTokenToEndOfSubRegion(subRegion, currentToken, _ref) {\n  var impliedHundreds = _ref.impliedHundreds;\n  var tokens = subRegion.tokens;\n\n  var prevToken = tokens[0];\n  if (!prevToken) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  if (impliedHundreds && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (impliedHundreds && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT) return true;\n  if (prevToken.type === _constants.TOKEN_TYPE.MAGNITUDE && currentToken.type === _constants.TOKEN_TYPE.MAGNITUDE) return true;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  if (impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return true;\n  return false;\n};\n\nvar getSubRegionType = function getSubRegionType(subRegion, currentToken) {\n  if (!subRegion) {\n    return { type: currentToken.type };\n  }\n  var prevToken = subRegion.tokens[0];\n  var isHundred = prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT || prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN || prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN && _constants.NUMBER[prevToken.lowerCaseValue] > 9 || prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.UNIT || prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.UNIT && subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE;\n  if (subRegion.type === _constants.TOKEN_TYPE.MAGNITUDE) return { type: _constants.TOKEN_TYPE.MAGNITUDE, isHundred: isHundred };\n  if (isHundred) return { type: _constants.TOKEN_TYPE.HUNDRED, isHundred: isHundred };\n  return { type: currentToken.type, isHundred: isHundred };\n};\n\nvar checkIfTokenFitsSubRegion = function checkIfTokenFitsSubRegion(subRegion, token, options) {\n  var _getSubRegionType = getSubRegionType(subRegion, token);\n\n  var type = _getSubRegionType.type;\n  var isHundred = _getSubRegionType.isHundred;\n\n  if (!subRegion) return { action: START_NEW_REGION, type: type, isHundred: isHundred };\n  if (canAddTokenToEndOfSubRegion(subRegion, token, options)) {\n    return { action: ADD, type: type, isHundred: isHundred };\n  }\n  return { action: START_NEW_REGION, type: type, isHundred: isHundred };\n};\n\nvar getSubRegions = function getSubRegions(region, options) {\n  var subRegions = [];\n  var currentSubRegion = void 0;\n  var tokensCount = region.tokens.length;\n  var i = tokensCount - 1;\n  while (i >= 0) {\n    var token = region.tokens[i];\n\n    var _checkIfTokenFitsSubR = checkIfTokenFitsSubRegion(currentSubRegion, token, options);\n\n    var action = _checkIfTokenFitsSubR.action;\n    var type = _checkIfTokenFitsSubR.type;\n    var isHundred = _checkIfTokenFitsSubR.isHundred;\n\n    token.type = isHundred ? _constants.TOKEN_TYPE.HUNDRED : token.type;\n    switch (action) {\n      case ADD:\n        {\n          currentSubRegion.type = type;\n          currentSubRegion.tokens.unshift(token);\n          break;\n        }\n      case START_NEW_REGION:\n        {\n          currentSubRegion = {\n            tokens: [token],\n            type: type\n          };\n          subRegions.unshift(currentSubRegion);\n          break;\n        }\n      // no default\n    }\n    i--;\n  }\n  return subRegions;\n};\n\nvar canAddTokenToEndOfRegion = function canAddTokenToEndOfRegion(region, currentToken, _ref2) {\n  var impliedHundreds = _ref2.impliedHundreds;\n  var tokens = region.tokens;\n\n  var prevToken = tokens[tokens.length - 1];\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.UNIT && !region.hasDecimal) return false;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.UNIT && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  if (!impliedHundreds && prevToken.type === _constants.TOKEN_TYPE.TEN && currentToken.type === _constants.TOKEN_TYPE.TEN) return false;\n  return true;\n};\n\nvar checkIfTokenFitsRegion = function checkIfTokenFitsRegion(region, token, options) {\n  var isDecimal = _constants.DECIMALS.includes(token.lowerCaseValue);\n  if ((!region || !region.tokens.length) && isDecimal) {\n    return START_NEW_REGION;\n  }\n  var isPunctuation = _constants.PUNCTUATION.includes(token.lowerCaseValue);\n  if (isPunctuation) return SKIP;\n  var isJoiner = _constants.JOINERS.includes(token.lowerCaseValue);\n  if (isJoiner) return SKIP;\n  if (isDecimal && !region.hasDecimal) {\n    return ADD;\n  }\n  var isNumberWord = _constants.NUMBER_WORDS.includes(token.lowerCaseValue);\n  if (isNumberWord) {\n    if (!region) return START_NEW_REGION;\n    if (canAddTokenToEndOfRegion(region, token, options)) {\n      return ADD;\n    }\n    return START_NEW_REGION;\n  }\n  return NOPE;\n};\n\nvar checkBlacklist = function checkBlacklist(tokens) {\n  return tokens.length === 1 && _constants.BLACKLIST_SINGULAR_WORDS.includes(tokens[0].lowerCaseValue);\n};\n\nvar matchRegions = function matchRegions(tokens, options) {\n  var regions = [];\n\n  if (checkBlacklist(tokens)) return regions;\n\n  var i = 0;\n  var currentRegion = void 0;\n  var tokensCount = tokens.length;\n  while (i < tokensCount) {\n    var token = tokens[i];\n    var tokenFits = checkIfTokenFitsRegion(currentRegion, token, options);\n    switch (tokenFits) {\n      case SKIP:\n        {\n          break;\n        }\n      case ADD:\n        {\n          if (currentRegion) {\n            currentRegion.end = token.end;\n            currentRegion.tokens.push(token);\n            if (token.type === _constants.TOKEN_TYPE.DECIMAL) {\n              currentRegion.hasDecimal = true;\n            }\n          }\n          break;\n        }\n      case START_NEW_REGION:\n        {\n          currentRegion = {\n            start: token.start,\n            end: token.end,\n            tokens: [token]\n          };\n          regions.push(currentRegion);\n          if (token.type === _constants.TOKEN_TYPE.DECIMAL) {\n            currentRegion.hasDecimal = true;\n          }\n          break;\n        }\n      case NOPE:\n      default:\n        {\n          currentRegion = null;\n          break;\n        }\n    }\n    i++;\n  }\n\n  return regions.map(function (region) {\n    return (0, _extends3.default)({}, region, { subRegions: getSubRegions(region, options) });\n  });\n};\n\nvar getTokenType = function getTokenType(chunk) {\n  if (_constants.UNIT_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.UNIT;\n  if (_constants.TEN_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.TEN;\n  if (_constants.MAGNITUDE_KEYS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.MAGNITUDE;\n  if (_constants.DECIMALS.includes(chunk.toLowerCase())) return _constants.TOKEN_TYPE.DECIMAL;\n};\n\nexports.default = function (text, options) {\n  var tokens = text.split(/(\\w+|\\s|[[:punct:]])/i).reduce(function (acc, chunk) {\n    var unfuzzyChunk = chunk.length && options.fuzzy && !_constants.PUNCTUATION.includes(chunk) ? (0, _fuzzy2.default)(chunk) : chunk;\n    var start = acc.length ? acc[acc.length - 1].end + 1 : 0;\n    var end = start + chunk.length;\n    return end !== start ? acc.concat({\n      start: start,\n      end: end - 1,\n      value: unfuzzyChunk,\n      lowerCaseValue: unfuzzyChunk.toLowerCase(),\n      type: getTokenType(unfuzzyChunk, options)\n    }) : acc;\n  }, []);\n  var regions = matchRegions(tokens, options);\n  return regions;\n};"]},"metadata":{},"sourceType":"script"}